#!/usr/bin/python

import sys
import io
import time
from tempfile import mkstemp
from subprocess import Popen, STDOUT


def run(cmd):
  statusfile = mkstemp()[1]
  with io.open(statusfile, 'wb') as writer:
    with io.open(statusfile, 'rb', 1) as reader:

      proc = Popen(cmd, shell=True, stdout=writer, stdin=None, stderr=STDOUT)

      while None == proc.poll():
        sys.stdout.write(reader.read())
        time.sleep(0.2)

      sys.stdout.write(reader.read(10000))
      sys.stdout.flush()

      if 0 != proc.returncode:
        sys.stdout.write("exit code: %s\n" % (proc.returncode))

  return proc.returncode


def puppet_on_centos():
  cmd = """
  rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm && \
  yum makecache && yum -y upgrade && yum install -y puppet hiera openssh-server
  """
  return run(cmd)


def puppet_on_ubuntu():
  cmd = """
  cd /tmp/buildutils && \
  wget -c 'http://apt.puppetlabs.com/puppetlabs-release-trusty.deb' && \
  dpkg -i puppetlabs-release-trusty.deb && \
  sed -i -e 's/^deb\-src /#deb-src /g' /etc/apt/sources.list && \
  apt-get update && apt-get -y upgrade && apt-get install -y puppet hiera && \
  rm -rf /tmp/buildutils
  """
  return run(cmd)


def pe_on_centos():
  cmd = """
  cd /tmp/buildutils && \
  yum install -y tar && \
  mkdir -p puppet-enterprise && \
  tar xvf puppet-enterprise-* -C puppet-enterprise --strip-components
  """
#  tar xvf puppet-enterprise-* -C puppet-enterprise --strip-components 1 && \
#  rm -fv puppet-enterprise*.tar.gz && \
# ./puppet-enterprise/puppet-enterprise-installer -a agent-answers.txt && \
#  rm -rf /tmp/buildutils
#  """
  return run(cmd)


def pe_on_ubuntu():
  cmd = """ 
  cd /tmp/buildutils && \
  mkdir -p puppet-enterprise && \
  tar xvf puppet-enterprise-* -C puppet-enterprise --strip-components 1
  """
#  tar xvf puppet-enterprise-* -C puppet-enterprise --strip-components 1 && \
#  rm -fv puppet-enterprise*.tar.gz && \
# ./puppet-enterprise/puppet-enterprise-installer -a agent-answers.txt && \
#  rm -rf /tmp/buildutils
#  """
  return run(cmd)


def p_valid_os(os):
  valid_oses = [ 'ubuntu', 'centos' ]
  if not os in valid_oses:
    sys.stdout.write("Sorry, but OS \'%s\' not supported!" % (os))
    return False
  return True


def install_puppet(os_flavor):
  if p_valid_os(os_flavor):
    sys.stdout.write("Installing Puppet FLOSS on %s..." % (os_flavor))
    if 'centos' == os_flavor:
      return puppet_on_centos()
    else:
      return puppet_on_ubuntu()
  else:
    return -1


def install_pe(os_flavor):
  if p_valid_os(os_flavor):
    sys.stdout.write("Installing Puppet Enterprise on %s..." % (os_flavor))
    if 'centos' == os_flavor:
      return pe_on_centos()
    else:
      return pe_on_ubuntu()
  else:
    return -1


def install(puppet_flavor, os_flavor):
  if 'puppet' == puppet_flavor:
    return install_puppet(os_flavor)
  elif 'pe' == puppet_flavor:
    return install_pe(os_flavor)
  else:
    sys.stdout.write("Invalid Puppet flavor specified: \'%s\'" % (puppet_flavor))
    return -1


def usage():
  sys.stdout.write("Usage: install.py <puppet|pe> <ubuntu|centos>")


def main(argv):
  if 3 == len(argv):
    return(install(argv[1].lower(), argv[2].lower()))
  else:
    usage()
    return -1


if '__main__' == __name__:
  sys.exit(main(sys.argv))
